\begin{thebibliography}{}

\bibitem[Sti\'{e}venart et~al., 2022]{DeRoover2022}
Sti\'{e}venart,Q., De~Roover,C., and Ghafari,M. (2022).
\newblock Security risks of porting c programs to webassembly.
\newblock In {\em Proceedings of the 37th ACM/SIGAPP Symposium on Applied
  Computing}, SAC '22, page 1713–1722, New York, NY, USA. Association for
  Computing Machinery.

\bibitem[Romano et~al., 2022]{wobfuscator}
Romano,A., Lehmann,D., Pradel,M., and Wang,W. (2022).
\newblock Wobfuscator: Obfuscating javascript malware via opportunistic
  translation to webassembly.
\newblock In {\em 2022 2022 IEEE Symposium on Security and Privacy (SP) (SP)},
  pages 1101--1116, Los Alamitos, CA, USA. IEEE Computer Society.

\bibitem[Harrand, 2022]{Harrand1650630}
Harrand,N. (2022).
\newblock {\em Software Diversity for Third-Party Dependencies}.
\newblock PhD thesis, KTH, Software and Computer systems, SCS.
\newblock QCR 20220413.

\bibitem[Bhansali et~al., 2022]{10.1145/3507657.3528560}
Bhansali,S., Aris,A., Acar,A., Oz,H., and Uluagac,A.~S. (2022).
\newblock A first look at code obfuscation for webassembly.
\newblock In {\em Proceedings of the 15th ACM Conference on Security and
  Privacy in Wireless and Mobile Networks}, WiSec '22, page 140–145, New
  York, NY, USA. Association for Computing Machinery.

\bibitem[Voulimeneas et~al., 2021]{voulimeneas2021dmvx}
Voulimeneas,A., Song,D., Larsen,P., Franz,M., and Volckaert,S. (2021).
\newblock dmvx: Secure and efficient multi-variant execution in a distributed
  setting.
\newblock In {\em Proceedings of the 14th European Workshop on Systems
  Security}, pages 41--47.

\bibitem[Spies and Mock, 2021]{9640153}
Spies,B. and Mock,M. (2021).
\newblock An evaluation of webassembly in non-web environments.
\newblock In {\em 2021 XLVII Latin American Computing Conference (CLEI)}, pages
  1--10.

\bibitem[Narayan et~al., 2021]{Narayan2021Swivel}
Narayan,S., Disselkoen,C., Moghimi,D., Cauligi,S., Johnson,E., Gang,Z.,
  Vahldiek-Oberwagner,A., Sahita,R., Shacham,H., Tullsen,D., et~al. (2021).
\newblock Swivel: Hardening webassembly against spectre.
\newblock In {\em USENIX Security Symposium}.

\bibitem[Lee et~al., 2021]{lee2021savior}
Lee,S., Kang,H., Jang,J., and Kang,B.~B. (2021).
\newblock Savior: Thwarting stack-based memory safety violations by randomizing
  stack layout.
\newblock {\em IEEE Transactions on Dependable and Secure Computing}.

\bibitem[Johnson et~al., 2021]{johnson2021}
Johnson,E., Thien,D., Alhessi,Y., Narayan,S., Brown,F., Lerner,S., McMullen,T.,
  Savage,S., and Stefan,D. (2021).
\newblock Sfi safety for native-compiled wasm.
\newblock {\em NDSS. Internet Society}.

\bibitem[Hilbig et~al., 2021]{Hilbig2021AnES}
Hilbig,A., Lehmann,D., and Pradel,M. (2021).
\newblock An empirical study of real-world webassembly binaries: Security,
  languages, use cases.
\newblock {\em Proceedings of the Web Conference 2021}.

\bibitem[{Cabrera Arteaga} et~al., 2021]{MEWE}
{Cabrera Arteaga},J., {Laperdrix},P., {Monperrus},M., and {Baudry},B. (2021).
\newblock {Multi-Variant Execution at the Edge}.
\newblock {\em arXiv e-prints}, page arXiv:2108.08125.

\bibitem[Cabrera~Arteaga et~al., 2021]{CROW}
Cabrera~Arteaga,J., Floros,O., Vera~Perez,O., Baudry,B., and Monperrus,M.
  (2021).
\newblock Crow: code diversification for webassembly.
\newblock In {\em MADWeb, NDSS 2021}.

\bibitem[WAS, 2021]{WASI}
 (2021).
\newblock Webassembly system interface.

\bibitem[CVE, 2021]{CVE}
 (2021).
\newblock Stop a wasm compiler bug before it becomes a problem | fastly.

\bibitem[Xu et~al., 2020]{xu2020merr}
Xu,Y., Solihin,Y., and Shen,X. (2020).
\newblock Merr: Improving security of persistent memory objects via efficient
  memory exposure reduction and randomization.
\newblock In {\em Proc. of ASPLOS}, pages 987--1000.

\bibitem[Wen and Weber, 2020]{wen2020wasmachine}
Wen,E. and Weber,G. (2020).
\newblock Wasmachine: Bring iot up to speed with a webassembly os.
\newblock In {\em 2020 IEEE International Conference on Pervasive Computing and
  Communications Workshops (PerCom Workshops)}, pages 1--4. IEEE.

\bibitem[Tsoupidi et~al., 2020]{Tsoupidi2020ConstraintBasedSD}
Tsoupidi,R.~M., Lozano,R.~C., and Baudry,B. (2020).
\newblock Constraint-based software diversification for efficient mitigation of
  code-reuse attacks.
\newblock {\em ArXiv}, abs/2007.08955.

\bibitem[Shillaker and Pietzuch, 2020]{shillaker2020faasm}
Shillaker,S. and Pietzuch,P. (2020).
\newblock Faasm: Lightweight isolation for efficient stateful serverless
  computing.
\newblock In {\em USENIX Annual Technical Conference}, pages 419--433.

\bibitem[Runeson et~al., 2020]{Runeson2020}
Runeson,P., Engstr{\"o}m,E., and Storey,M.-A. (2020).
\newblock {\em The Design Science Paradigm as a Frame for Empirical Software
  Engineering}, pages 127--147.
\newblock Springer International Publishing, Cham.

\bibitem[{Mendki}, 2020]{pMendkiServerless}
{Mendki},P. (2020).
\newblock Evaluating webassembly enabled serverless approach for edge
  computing.
\newblock In {\em 2020 IEEE Cloud Summit}, pages 161--166.

\bibitem[Lehmann et~al., 2020]{usenixWasm2020}
Lehmann,D., Kinder,J., and Pradel,M. (2020).
\newblock Everything old is new again: Binary security of webassembly.
\newblock In {\em 29th USENIX Security Symposium (USENIX Security 20)}. USENIX
  Association.

\bibitem[Harrand et~al., 2020]{harrand2020java}
Harrand,N., Soto-Valero,C., Monperrus,M., and Baudry,B. (2020).
\newblock Java decompiler diversity and its application to meta-decompilation.
\newblock {\em Journal of Systems and Software}, 168:110645.

\bibitem[Gadepalli et~al., 2020]{Sledge}
Gadepalli,P.~K., McBride,S., Peach,G., Cherkasova,L., and Parmer,G. (2020).
\newblock Sledge: A serverless-first, light-weight wasm runtime for the edge.
\newblock In {\em Proceedings of the 21st International Middleware Conference},
  page 265–279.

\bibitem[Chen and {\relax W3C group}, 2020]{WebAssemblySecurity}
Chen,D. and {\relax W3C group} (2020).
\newblock {WebAssembly documentation: Security}.
\newblock {Accessed: 18 June 2020}.

\bibitem[Cabrera~Arteaga et~al., 2020]{WasmSuperoptimizer}
Cabrera~Arteaga,J., Donde,S., Gu,J., Floros,O., Satabin,L., Baudry,B., and
  Monperrus,M. (2020).
\newblock {\em Superoptimization of WebAssembly Bytecode}, page 36–40.
\newblock Association for Computing Machinery, New York, NY, USA.

\bibitem[Bryant, 2020]{bryant2020webassembly}
Bryant,D. (2020).
\newblock Webassembly outside the browser: A new foundation for pervasive
  computing.
\newblock In {\em Proc. of ICWE 2020}, pages 9--12.

\bibitem[{\"O}sterlund et~al., 2019]{osterlund2019kmvx}
{\"O}sterlund,S., Koning,K., Olivier,P., Barbalace,A., Bos,H., and Giuffrida,C.
  (2019).
\newblock kmvx: Detecting kernel information leaks with multi-variant
  execution.
\newblock In {\em ASPLOS}.

\bibitem[Churchill et~al., 2019]{churchill2019}
Churchill,B., Padon,O., Sharma,R., and Aiken,A. (2019).
\newblock Semantic program alignment for equivalence checking.
\newblock In {\em Proceedings of the 40th ACM SIGPLAN Conference on Programming
  Language Design and Implementation}, PLDI 2019, page 1027–1040, New York,
  NY, USA. Association for Computing Machinery.

\bibitem[Cabrera~Arteaga et~al., 2019]{STRAC}
Cabrera~Arteaga,J., Monperrus,M., and Baudry,B. (2019).
\newblock Scalable comparison of javascript v8 bytecode traces.
\newblock In {\em Proceedings of the 11th ACM SIGPLAN International Workshop on
  Virtual Machines and Intermediate Languages}, VMIL 2019, page 22–31, New
  York, NY, USA. Association for Computing Machinery.

\bibitem[{Bytecode Alliance }, 2019]{bytecodealliance}
{Bytecode Alliance } ({2019}).
\newblock {Bytecode Alliance}.

\bibitem[Aga and Austin, 2019]{aga2019smokestack}
Aga,M.~T. and Austin,T. (2019).
\newblock Smokestack: thwarting dop attacks with runtime stack layout
  randomization.
\newblock In {\em Proc. of CGO}, pages 26--36.

\bibitem[Varda, 2018]{CloudflareWasm}
Varda,K. (2018).
\newblock Webassembly on cloudflare workers.
\newblock Technical report.

\bibitem[Silvanovich, 2018]{ChromeZero}
Silvanovich,N. (2018).
\newblock The problems and promise of webassembly.
\newblock Technical report.

\bibitem[Lu et~al., 2018]{lu2018stopping}
Lu,K., Xu,M., Song,C., Kim,T., and Lee,W. (2018).
\newblock Stopping memory disclosures via diversification and replicated
  execution.
\newblock {\em IEEE Transactions on Dependable and Secure Computing}.

\bibitem[Li et~al., 2018]{Li2018}
Li,J., Zhao,B., and Zhang,C. (2018).
\newblock {Fuzzing: a survey}.
\newblock {\em Cybersecurity}, 1(1):1--13.

\bibitem[Jacobsson and W{\aa}hsl{\'e}n, 2018]{1244493Jacobsson}
Jacobsson,M. and W{\aa}hsl{\'e}n,J. (2018).
\newblock Virtual machine execution for wearables based on webassembly.
\newblock In {\em EAI International Conference on Body Area Networks}, pages
  381--389. Springer, Cham.

\bibitem[Hickey, 2018]{FastlyWasm}
Hickey,P. (2018).
\newblock Announcing lucet: Fastly’s native webassembly compiler and runtime.
\newblock Technical report.

\bibitem[Genkin et~al., 2018]{Genkin2018DrivebyKC}
Genkin,D., Pachmanov,L., Tromer,E., and Yarom,Y. (2018).
\newblock Drive-by key-extraction cache attacks from portable code.
\newblock {\em IACR Cryptol. ePrint Arch.}, 2018:119.

\bibitem[Belleville et~al., 2018]{10.1145/3281662}
Belleville,N., Courouss\'{e},D., Heydemann,K., and Charles,H.-P. (2018).
\newblock Automated software protection for the masses against side-channel
  attacks.
\newblock {\em ACM Trans. Archit. Code Optim.}, 15(4).

\bibitem[Zalewski, 2017]{zalewski2017american}
Zalewski,M. (2017).
\newblock American fuzzy lop.

\bibitem[{WebAssembly Community Group}, 2017]{wasm_spec}
{WebAssembly Community Group} (2017).
\newblock {WebAssembly Specification}.

\bibitem[Sasnauskas et~al., 2017]{Sasnauskas2017Souper:Superoptimizer}
Sasnauskas,R., Chen,Y., Collingbourne,P., Ketema,J., Lup,G., Taneja,J., and
  Regehr,J. (2017).
\newblock {Souper: A Synthesizing Superoptimizer}.
\newblock {\em arXiv preprint 1711.04422}.

\bibitem[{Oracle}, 2017]{javaapplet}
{Oracle} ({2017}).
\newblock {JDK 9 Release Notes. Deprecation of Java Applets}.

\bibitem[Haas et~al., 2017]{Haas_2017}
Haas,A., Rossberg,A., Schuff,D.~L., Schuff,D.~L., Titzer,B.~L., Holman,M.,
  Gohman,D., Wagner,L., Zakai,A., and Bastien,J.~F. (2017).
\newblock Bringing the web up to speed with webassembly.
\newblock {\em PLDI}.

\bibitem[Van~Es et~al., 2016]{EsAsm.js}
Van~Es,N., Nicolay,J., Stievenart,Q., D'Hondt,T., and De~Roover,C. (2016).
\newblock A performant scheme interpreter in asm.js.
\newblock In {\em Proceedings of the 31st Annual ACM Symposium on Applied
  Computing}, SAC '16, page 1944–1951, New York, NY, USA. Association for
  Computing Machinery.

\bibitem[Phothilimthana et~al., 2016]{SuperoptimizationScaling}
Phothilimthana,P.~M., Thakur,A., Bodik,R., and Dhurjati,D. (2016).
\newblock Scaling up superoptimization.
\newblock {\em SIGARCH Comput. Archit. News}, 44(2):297–310.

\bibitem[Courouss{\'e} et~al., 2016]{courousse2016runtime}
Courouss{\'e},D., Barry,T., Robisson,B., Jaillon,P., Potin,O., and Lanet,J.-L.
  (2016).
\newblock Runtime code polymorphism as a protection against side channel
  attacks.
\newblock In {\em IFIP International Conference on Information Security Theory
  and Practice}, pages 136--152. Springer.

\bibitem[Morgan and Morgan, 2015]{morgan2015web}
Morgan,T.~D. and Morgan,J.~W. (2015).
\newblock Web timing attacks made practical.
\newblock {\em Black Hat}.

\bibitem[Davi et~al., 2015]{davi2015isomeron}
Davi,L., Liebchen,C., Sadeghi,A.-R., Snow,K.~Z., and Monrose,F. (2015).
\newblock Isomeron: Code randomization resilient to (just-in-time)
  return-oriented programming.
\newblock In {\em NDSS}.

\bibitem[Crane et~al., 2015]{crane2015thwarting}
Crane,S., Homescu,A., Brunthaler,S., Larsen,P., and Franz,M. (2015).
\newblock Thwarting cache side-channel attacks through dynamic software
  diversity.
\newblock In {\em NDSS}, pages 8--11.

\bibitem[Baudry and Monperrus, 2015]{natural_diversity}
Baudry,B. and Monperrus,M. (2015).
\newblock The multiple facets of software diversity: Recent developments in
  year 2000 and beyond.
\newblock {\em ACM Comput. Surv.}, 48(1).

\bibitem[{Alon Zakai}, 2015]{asmjs}
{Alon Zakai} (2015).
\newblock {asm.js Speedups Everywhere}.

\bibitem[Agosta et~al., 2015]{agosta2015meet}
Agosta,G., Barenghi,A., Pelosi,G., and Scandale,M. (2015).
\newblock The {MEET} approach: Securing cryptographic embedded software against
  side channel attacks.
\newblock {\em IEEE Transactions on Computer-Aided Design of Integrated
  Circuits and Systems}, 34(8):1320--1333.

\bibitem[{Zakai and colleagues}, 2014b]{emscripten}
{Zakai and colleagues} ({2014}b).
\newblock {Emscripten}.

\bibitem[{Zakai and colleagues}, 2014a]{asmjsweb}
{Zakai and colleagues} ({2014}a).
\newblock {asm.js}.

\bibitem[Le et~al., 2014]{LeCompilers}
Le,V., Afshari,M., and Su,Z. (2014).
\newblock Compiler validation via equivalence modulo inputs.
\newblock In {\em Proceedings of the 35th ACM SIGPLAN Conference on Programming
  Language Design and Implementation}, PLDI ’14, page 216–226.

\bibitem[Okhravi et~al., 2013]{okhravi2013survey}
Okhravi,H., Rabe,M., Mayberry,T., Leonard,W., Hobson,T., Bigelow,D., and
  Streilein,W. (2013).
\newblock Survey of cyber moving targets.
\newblock {\em Massachusetts Inst of Technology Lexington Lincoln Lab, No.
  MIT/LL-TR-1166}.

\bibitem[Homescu et~al., 2013]{homescu2013profile}
Homescu,A., Neisius,S., Larsen,P., Brunthaler,S., and Franz,M. (2013).
\newblock Profile-guided automated software diversity.
\newblock In {\em Proceedings of the 2013 IEEE/ACM International Symposium on
  Code Generation and Optimization (CGO)}, pages 1--11. IEEE.

\bibitem[Jackson, 2012]{jackson}
Jackson,T. (2012).
\newblock {\em On the Design, Implications, and Effects of Implementing
  Software Diversity for Security}.
\newblock PhD thesis, University of California, Irvine.

\bibitem[Cleemput et~al., 2012]{Cleemput2012}
Cleemput,J.~V., Coppens,B., and De~Sutter,B. (2012).
\newblock Compiler mitigations for time attacks on modern x86 processors.
\newblock {\em ACM Trans. Archit. Code Optim.}, 8(4).

\bibitem[Sidiroglou-Douskos et~al., 2011]{10.1145/2025113.2025133}
Sidiroglou-Douskos,S., Misailovic,S., Hoffmann,H., and Rinard,M. (2011).
\newblock Managing performance vs. accuracy trade-offs with loop perforation.
\newblock In {\em Proceedings of the 19th ACM SIGSOFT Symposium and the 13th
  European Conference on Foundations of Software Engineering}, ESEC/FSE '11,
  page 124–134, New York, NY, USA. Association for Computing Machinery.

\bibitem[Jackson et~al., 2011]{jackson2011compiler}
Jackson,T., Salamat,B., Homescu,A., Manivannan,K., Wagner,G., Gal,A.,
  Brunthaler,S., Wimmer,C., and Franz,M. (2011).
\newblock Compiler-generated software diversity.
\newblock In {\em Moving Target Defense}, pages 77--98. Springer.

\bibitem[Amarilli et~al., 2011]{amarilli2011can}
Amarilli,A., M{\"u}ller,S., Naccache,D., Page,D., Rauzy,P., and Tunstall,M.
  (2011).
\newblock Can code polymorphism limit information leakage?
\newblock In {\em IFIP International Workshop on Information Security Theory
  and Practices}, pages 1--21. Springer.

\bibitem[Chen et~al., 2010]{Chen2010AdaptiveRT}
Chen,T.~Y., Kuo,F.-C., Merkel,R.~G., and Tse,T.~H. (2010).
\newblock Adaptive random testing: The art of test case diversity.
\newblock {\em J. Syst. Softw.}, 83:60--66.

\bibitem[Salamat et~al., 2009]{salamat2009orchestra}
Salamat,B., Jackson,T., Gal,A., and Franz,M. (2009).
\newblock Orchestra: intrusion detection using parallel execution and
  monitoring of program variants in user-space.
\newblock In {\em Proceedings of the 4th ACM European conference on Computer
  systems}, pages 33--46.

\bibitem[Maia et~al., 2008]{Maia08usinga}
Maia,M. D.~A., Sobreira,V., Paixão,K.~R., Amo,R. A.~D., and Silva,I.~R.
  (2008).
\newblock Using a sequence alignment algorithm to identify specific and common
  code from execution traces.
\newblock In {\em Proceedings of the 4th International Workshop on Program
  Comprehension through Dynamic Analysis (PCODA}, pages 6--10.

\bibitem[Jacob et~al., 2008]{jacob2008superdiversifier}
Jacob,M., Jakubowski,M.~H., Naldurg,P., Saw,C. W.~N., and Venkatesan,R. (2008).
\newblock The superdiversifier: Peephole individualization for software
  protection.
\newblock In {\em International Workshop on Security}, pages 100--120.
  Springer.

\bibitem[de~Moura and Bj{\o}rner, 2008]{SMT_solver}
de~Moura,L. and Bj{\o}rner,N. (2008).
\newblock Z3: An efficient smt solver.
\newblock In Ramakrishnan,C.~R. and Rehof,J., editors, {\em Tools and
  Algorithms for the Construction and Analysis of Systems}, pages 337--340,
  Berlin, Heidelberg. Springer Berlin Heidelberg.

\bibitem[Yu et~al., 2007]{10.1145/1190216.1190252}
Yu,D., Chander,A., Islam,N., and Serikov,I. (2007).
\newblock Javascript instrumentation for browser security.
\newblock In {\em Proceedings of the 34th Annual ACM SIGPLAN-SIGACT Symposium
  on Principles of Programming Languages}, POPL '07, page 237–249, New York,
  NY, USA. Association for Computing Machinery.

\bibitem[Salamat et~al., 2007]{salamat2007stopping}
Salamat,B., Gal,A., Jackson,T., Manivannan,K., Wagner,G., and Franz,M. (2007).
\newblock Stopping buffer overflow attacks at run-time: Simultaneous
  multi-variant program execution on a multicore processor.
\newblock Technical report, Technical Report 07-13, School of Information and
  Computer Sciences, UCIrvine.

\bibitem[{Microsoft}, 2007]{silverlight}
{Microsoft} ({2007}).
\newblock {Silverlight}.

\bibitem[Bruschi et~al., 2007]{bruschi2007diversified}
Bruschi,D., Cavallaro,L., and Lanzi,A. (2007).
\newblock Diversified process replic{\ae} for defeating memory error exploits.
\newblock In {\em Proc. of the Int. Performance, Computing, and Communications
  Conference}.

\bibitem[Younan et~al., 2006]{Younan2006}
Younan,Y., Pozza,D., Piessens,F., and Joosen,W. (2006).
\newblock Extended protection against stack smashing attacks without
  performance loss.
\newblock In {\em 2006 22nd Annual Computer Security Applications Conference
  (ACSAC'06)}, pages 429--438.

\bibitem[Cox et~al., 2006]{cox06}
Cox,B., Evans,D., Filipi,A., Rowanhill,J., Hu,W., Davidson,J., Knight,J.,
  Nguyen-Tuong,A., and Hiser,J. (2006).
\newblock N-variant systems: a secretless framework for security through
  diversity.
\newblock In {\em Proc. of USENIX Security Symposium}, USENIX-SS'06.

\bibitem[Pohl et~al., 2005]{pohl2005software}
Pohl,K., B{\"o}ckle,G., and Van Der~Linden,F. (2005).
\newblock {\em Software product line engineering: foundations, principles, and
  techniques}, volume~1.
\newblock Springer.

\bibitem[Bhatkar et~al., 2005]{bhatkar2005efficient}
Bhatkar,S., Sekar,R., and DuVarney,D.~C. (2005).
\newblock Efficient techniques for comprehensive protection from memory error
  exploits.
\newblock In {\em Proceedings of the USENIX Security Symposium}, pages
  271--286.

\bibitem[El-Khalil and Keromytis, 2004]{ElKhalil2004}
El-Khalil,R. and Keromytis,A.~D. (2004).
\newblock Hydan: Hiding information in program binaries.
\newblock In Lopez,J., Qing,S., and Okamoto,E., editors, {\em Information and
  Communications Security}, pages 187--199, Berlin, Heidelberg. Springer Berlin
  Heidelberg.

\bibitem[{LLVM}, 2003]{llvmofficialweb}
{LLVM} ({2003}).
\newblock { The LLVM Compiler Infrastructure }.

\bibitem[Kc et~al., 2003]{Kc03}
Kc,G.~S., Keromytis,A.~D., and Prevelakis,V. (2003).
\newblock Countering code-injection attacks with instruction-set randomization.
\newblock In {\em Proc. of CCS}, pages 272--280.

\bibitem[Bhatkar et~al., 2003]{bhatkar03}
Bhatkar,S., DuVarney,D.~C., and Sekar,R. (2003).
\newblock Address obfuscation: an efficient approach to combat a board range of
  memory error exploits.
\newblock In {\em Proceedings of the USENIX Security Symposium}.

\bibitem[Barrantes et~al., 2003]{barrantes2003randomized}
Barrantes,E.~G., Ackley,D.~H., Forrest,S., Palmer,T.~S., Stefanovic,D., and
  Zovi,D.~D. (2003).
\newblock Randomized instruction set emulation to disrupt binary code injection
  attacks.
\newblock In {\em Proc. CCS}, pages 281--289.

\bibitem[Chew and Song, 2002]{Chew02mitigatingbuffer}
Chew,M. and Song,D. (2002).
\newblock Mitigating buffer overflows by operating system randomization.
\newblock Technical Report CS-02-197, Carnegie Mellon University.

\bibitem[Forrest et~al., 1997]{595185}
Forrest,S., Somayaji,A., and Ackley,D. (1997).
\newblock Building diverse computer systems.
\newblock In {\em Proceedings. The Sixth Workshop on Hot Topics in Operating
  Systems (Cat. No.97TB100133)}, pages 67--72.

\bibitem[{Microsoft}, 1996]{activex}
{Microsoft} ({1996}).
\newblock {Microsoft Announces ActiveX Technologies}.

\bibitem[Cohen, 1993]{cohen1993operating}
Cohen,F.~B. (1993).
\newblock Operating system protection through program evolution.
\newblock {\em Computers \& Security}, 12(6):565--584.

\bibitem[{Tim Berners-Lee}, 1990]{nexus}
{Tim Berners-Lee} ({1990}).
\newblock {The WorldWideWeb browser}.

\bibitem[Pettis and Hansen, 1990]{pettisochhansen}
Pettis,K. and Hansen,R.~C. (1990).
\newblock Profile guided code positioning.
\newblock In {\em Proceedings of the ACM SIGPLAN 1990 Conference on Programming
  Language Design and Implementation}, PLDI '90, page 16–27, New York, NY,
  USA. Association for Computing Machinery.

\bibitem[Henry, 1987]{Massalin1987}
Henry,M. (1987).
\newblock {Superoptimizer: a look at the smallest program}.
\newblock {\em ACM SIGARCH Computer Architecture News}, 15(5):122--126.

\bibitem[Avizienis and Kelly, 1984]{1659219}
Avizienis and Kelly (1984).
\newblock Fault tolerance by design diversity: Concepts and experiments.
\newblock {\em Computer}, 17(8):67--80.

\bibitem[Ryder, 1979]{ryder1979}
Ryder,B.~G. (1979).
\newblock Constructing the call graph of a program.
\newblock {\em IEEE Transactions on Software Engineering}, (3):216--226.

\bibitem[Gnanadesikan and Wilk, 1968]{gnanadesikan1968probability}
Gnanadesikan,R. and Wilk,M.~B. (1968).
\newblock Probability plotting methods for the analysis of data.
\newblock {\em Biometrika}, 55(1):1--17.

\bibitem[Mann and Whitney, 1947]{mann1947}
Mann,H.~B. and Whitney,D.~R. (1947).
\newblock On a test of whether one of two random variables is stochastically
  larger than the other.
\newblock {\em Ann. Math. Statist.}, 18(1):50--60.

\bibitem[Cox, 1893]{cox1893cinderella}
Cox,M.~R. (1893).
\newblock {\em Cinderella: Three hundred and forty-five variants of Cinderella,
  Catskin, and Cap o'Rushes}.
\newblock Number~31. Folk-lore Society.

\end{thebibliography}
